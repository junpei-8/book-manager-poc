---
import { BookScreenContent } from './BookScreenContent.react';
import { BookScreenNewDataViewer } from './new/BookScreenNewDataViewer.react';
import { BookScreenNewEntryAction } from './new/BookScreenNewEntryAction.react';
import { BookScreenNewSearchDrawer } from './new/BookScreenNewSearchDrawer.react';

const props = Astro.props;
type Props = {
  mode: 'new' | 'view'; // 新規 or 表示
};
---

<div class="book-viewer wrapper" data-mode={props.mode}>
  <BookScreenContent
    client:idle
    mode={props.mode}
    transition:persist="book-viewer-content"
  />

  {
    props.mode === 'new' ? (
      <>
        <BookScreenNewDataViewer client:idle />
        <BookScreenNewSearchDrawer client:idle />
        <BookScreenNewEntryAction client:idle />
      </>
    ) : null
  }

  {props.mode === 'view' ? '<BookScreenViewDetails />' : null}

  <!-- {props.mode === 'new' ? <a href="/books/~id">詳細を見る</a> : null}
  {props.mode === 'view' ? <a href="/books/new">新規作成</a> : null} -->
</div>

<style is:global>
  /* ::view-transition-old(book-viewer),
  ::view-transition-new(book-viewer) {
    width: 100%;
    height: 100%;
  } */
</style>

<style>
  .book-viewer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    view-transition-name: book-viewer;
    flex-grow: 1;
    padding: 1rem;
  }
  /* @media (max-width: 48rem) {
    .book-viewer {
      flex-grow: 0;
    }
  } */

  .book-viewer[data-mode='new'] {
    max-width: 400px;
    gap: 1rem;
    padding-top: 4.25rem;
    padding-bottom: 4.25rem;
  }

  .book-viewer[data-mode='view'] {
    width: auto;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  @media (max-width: 48rem) {
    .book-viewer[data-mode='view'] {
      border-bottom-left-radius: 10%;
      border-bottom-right-radius: 10%;
    }
  }
</style>
